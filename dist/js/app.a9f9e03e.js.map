{"version":3,"file":"js/app.a9f9e03e.js","mappings":"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","sources":["webpack://multymessage/./src/App.vue","webpack://multymessage/./src/stores/mainStore.js","webpack://multymessage/./src/components/appHeader.vue","webpack://multymessage/./src/components/appHeader.vue?4329","webpack://multymessage/./src/components/ChatsList.vue","webpack://multymessage/./src/components/ChatsList.vue?3fa5","webpack://multymessage/./src/components/MessagesList.vue","webpack://multymessage/./src/components/MessagesList.vue?a962","webpack://multymessage/./src/components/MessageForm.vue","webpack://multymessage/./src/components/MessageForm.vue?4079","webpack://multymessage/./src/components/ChatBlock.vue","webpack://multymessage/./src/components/ChatBlock.vue?f28a","webpack://multymessage/./src/components/appLogin.vue","webpack://multymessage/./src/components/appLogin.vue?04ef","webpack://multymessage/./src/components/appMain.vue","webpack://multymessage/./src/components/appMain.vue?e59c","webpack://multymessage/./src/App.vue?7ccd","webpack://multymessage/./src/main.js","webpack://multymessage/webpack/bootstrap","webpack://multymessage/webpack/runtime/chunk loaded","webpack://multymessage/webpack/runtime/compat get default export","webpack://multymessage/webpack/runtime/define property getters","webpack://multymessage/webpack/runtime/global","webpack://multymessage/webpack/runtime/hasOwnProperty shorthand","webpack://multymessage/webpack/runtime/publicPath","webpack://multymessage/webpack/runtime/jsonp chunk loading","webpack://multymessage/webpack/startup"],"sourcesContent":["<template>\r\n  <Header/>\r\n  <Main/>\r\n</template>\r\n\r\n<script>\r\nimport Header from './components/appHeader.vue'\r\nimport Main from './components/appMain.vue'\r\n\r\nexport default {\r\n  name: 'App',\r\n  components: {\r\n    Header,\r\n    Main\r\n  }\r\n}\r\n</script>\r\n\r\n","import { defineStore } from \"pinia\";\r\n\r\nconst API_URL_GPT = 'https://nexra.aryahcr.cc/api/chat/gptweb';\r\nconst TASK_URL_GPT = 'https://nexra.aryahcr.cc/api/chat/task';\r\nconst API_URL_GEMINI = \"https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=GEMINI_API_KEY\"\r\n\r\nasync function waitForGptResult(taskId) {\r\n    for (let i = 0; i < 30; i++) {\r\n        await new Promise(resolve => setTimeout(resolve, 500));\r\n        try {\r\n            const response = await fetch(`${TASK_URL_GPT}/${encodeURIComponent(taskId)}`);\r\n            if (!response.ok) {\r\n                console.error(`Ошибка проверки задачи GPT: Статус ${response.status}`);\r\n                continue;\r\n            }\r\n            const data = await response.json();\r\n            if (data.status === 'completed') {\r\n                return data;\r\n            } else if (data.status === 'error') {\r\n                throw new Error(data.error || 'Ошибка обработки задачи GPT на сервере');\r\n            }\r\n        } catch (error) {\r\n            console.error('Критическая ошибка при проверке задачи GPT:', error);\r\n            if (i === 29) throw error;\r\n        }\r\n    }\r\n    throw new Error('Превышено время ожидания ответа от GPT API');\r\n}\r\n\r\nasync function callGptApi(prompt) {\r\n    const response = await fetch(API_URL_GPT, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n            prompt: prompt,\r\n            markdown: false\r\n        })\r\n    });\r\n\r\n    if (!response.ok) {\r\n        throw new Error(`Ошибка при создании задачи GPT: статус ${response.status}`);\r\n    }\r\n    const data = await response.json();\r\n    if (!data.id) {\r\n        throw new Error('API GPT не вернуло ID задачи');\r\n    }\r\n    const result = await waitForGptResult(data.id);\r\n    if (result?.gpt) {\r\n        return result.gpt;\r\n    } else {\r\n        throw new Error('API GPT вернуло пустой ответ');\r\n    }\r\n}\r\n\r\nasync function callGeminiApi(messages, apiKey) {\r\n    if (!apiKey) {\r\n        throw new Error('Отсутствует токен для Gemini API. Добавьте его в хранилище.');\r\n    }\r\n    const contents = messages.map(msg => ({\r\n        role: msg.sender === 'user' ? 'user' : 'model',\r\n        parts: [{ text: msg.text }]\r\n    }));\r\n    const response = await fetch(`${API_URL_GEMINI}${apiKey}`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ contents })\r\n    });\r\n    if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(`Ошибка Gemini API: ${errorData.error?.message || response.statusText}`);\r\n    }\r\n    const data = await response.json();\r\n    const text = data?.candidates?.[0]?.content?.parts?.[0]?.text;\r\n    if (!text) {\r\n        throw new Error('Gemini API вернуло пустой или некорректный ответ.');\r\n    }\r\n    return text;\r\n}\r\n\r\nexport const useStore = defineStore('store', {\r\n    state: () => ({\r\n        chats: [],\r\n        tokenGemini: 'AIzaSyBCOo8nssaAiEw1DRg5gkP7PksazQoyDcE',\r\n        tokenGpt: '',\r\n        currentСhatId: null,\r\n        activePage: 'main',\r\n    }),\r\n    persist: true,\r\n    getters: {\r\n        currentChat: (state) => {\r\n            return state.chats.find(chat => chat.chatId === state.currentСhatId) || null;\r\n        },\r\n        currentСhatMessages() {\r\n            return this.currentChat ? this.currentChat.messages : [];\r\n        },\r\n    },\r\n    actions: {\r\n        _getNextChatId() {\r\n            if (this.chats.length === 0) return 1;\r\n            const maxId = Math.max(...this.chats.map(chat => chat.chatId));\r\n            return maxId + 1;\r\n        },\r\n        _getNextMessageId() {\r\n            const allMessages = this.chats.flatMap(chat => chat.messages);\r\n            if (allMessages.length === 0) return 1;\r\n            const maxId = Math.max(...allMessages.map(msg => msg.msgId));\r\n            return maxId + 1;\r\n        },\r\n        changeChat(id) {\r\n            this.currentСhatId = id;\r\n        },\r\n        async newMessage(text) {\r\n            if (!text || !this.currentChat) return;\r\n\r\n            const model = this.currentChat.model;\r\n            this.currentСhatMessages.push({\r\n                msgId: this._getNextMessageId(),\r\n                text,\r\n                sender: \"user\"\r\n            });\r\n\r\n            if (model === 'gpt' || model === 'gemini') {\r\n                const responseMsgId = this._getNextMessageId();\r\n                this.currentСhatMessages.push({\r\n                    msgId: responseMsgId,\r\n                    text: 'печатает...',\r\n                    sender: model,\r\n                    loading: true\r\n                });\r\n\r\n                try {\r\n                    let responseText = '';\r\n                    const conversationHistory = this.currentСhatMessages.filter(m => !m.loading);\r\n\r\n                    if (model === 'gpt') {\r\n                        let prompt = conversationHistory.map(msg => `${msg.sender}: ${msg.text}`).join('\\n');\r\n                        prompt += `\\n${model}:`;\r\n                        responseText = await callGptApi(prompt);\r\n                    } else if (model === 'gemini') {\r\n                        responseText = await callGeminiApi(conversationHistory, this.tokenGemini);\r\n                    }\r\n                    const responseMessage = this.currentСhatMessages.find(m => m.msgId === responseMsgId);\r\n                    if (responseMessage) {\r\n                        responseMessage.text = responseText.trim();\r\n                        delete responseMessage.loading;\r\n                    }\r\n                } catch (error) {\r\n                    console.error(`Ошибка при получении ответа от ${model}:`, error);\r\n                    const responseMessage = this.currentСhatMessages.find(m => m.msgId === responseMsgId);\r\n                    if (responseMessage) {\r\n                        responseMessage.text = `Произошла ошибка: ${error.message}`;\r\n                        responseMessage.error = true;\r\n                        delete responseMessage.loading;\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        newChat(model) {\r\n            const newId = this._getNextChatId();\r\n            this.chats.push({\r\n                chatId: newId,\r\n                messages: [{\r\n                    msgId: this._getNextMessageId(),\r\n                    text: \"Проси, что хочешь!\",\r\n                    sender: model\r\n                }],\r\n                model,\r\n                date: getFormattedDate()\r\n            });\r\n            this.currentСhatId = newId;\r\n        },\r\n        deleteChat(id) {\r\n            this.chats = this.chats.filter(chat => chat.chatId !== id);\r\n            if (this.currentСhatId === id) {\r\n                this.currentСhatId = this.chats.length > 0 ? this.chats[0].chatId : null;\r\n            }\r\n        },\r\n        changePage() {\r\n            this.activePage = this.activePage === 'main' ? 'login' : 'main';\r\n        },\r\n        saveTokens(geminiToken, gptToken) {\r\n            this.tokenGemini = geminiToken;\r\n            this.tokenGpt = gptToken;\r\n        },\r\n    }\r\n})\r\n\r\nfunction getFormattedDate() {\r\n    const today = new Date();\r\n    const day = String(today.getDate()).padStart(2, '0');\r\n    const month = String(today.getMonth() + 1).padStart(2, '0');\r\n    return `${day}.${month}`;\r\n}","Отлично! Вот тот же код, но без комментариев, для более чистого вида.\r\n\r\n<template>\r\n    <nav>\r\n        <h1>Multy Message</h1>\r\n        <a target=\"_blank\"\r\n            href=\"https://docs.google.com/forms/d/e/1FAIpQLSc5Hgu1mmSEZyBxy1se6L3bdigLnaKNsV5ktR0QstKNtmAj7g/viewform?usp=header\">обратная\r\n            связь</a>\r\n        <div class=\"login\">\r\n            <p v-if=\"activePage==='main'\" @click=\"changePage\">Вход</p>\r\n            <p  v-if=\"activePage==='login'\" @click=\"changePage\">Назад</p>\r\n            <img @click=\"changePage\" src=\"../assets/login.png\" alt=\"log\" id=\"log\">\r\n            <img v-if=\"tokenGemini==''\" src=\"../assets/gemini.png\" alt=\"gemini\">\r\n            <img v-else src=\"../assets/gemini_active.png\" alt=\"gemini\">\r\n            <img v-if=\"tokenGpt ==''\" src=\"../assets/gpt.png\" alt=\"gpt\">\r\n            <img v-else src=\"../assets/gpt_active.png\" alt=\"gpt\">\r\n        </div>\r\n    </nav>\r\n</template>\r\n\r\n<script setup>\r\nimport { useStore } from '../stores/mainStore'\r\nimport { storeToRefs } from 'pinia'\r\n\r\nconst store = useStore();\r\nconst {activePage, tokenGemini,tokenGpt} = storeToRefs(store);\r\nconst {changePage} = store;\r\n</script>\r\n\r\n<style scoped>\r\nnav {\r\n    height: 60px;\r\n    background: #D9D9D9;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 0 3%;\r\n    font-weight: bold;\r\n}\r\n\r\nh1 {\r\n    font-weight: 800;\r\n    font-size: 20px;\r\n    user-select: none;\r\n}\r\n\r\na {\r\n    color: #0095f6;\r\n    font-size: 14px;\r\n    text-decoration: none;\r\n}\r\n\r\na:hover {\r\n    text-decoration: underline;\r\n}\r\n\r\n.login {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 5px;\r\n}\r\n\r\n.login p {\r\n    margin: 0;\r\n    user-select: none;\r\n    cursor: pointer;\r\n}\r\n\r\n#log {\r\n    margin-right: 1vw;\r\n    cursor: pointer;\r\n}\r\n\r\nimg {\r\n    width: 20px;\r\n    height: 20px;\r\n}\r\n</style>\r\n","import script from \"./appHeader.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./appHeader.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./appHeader.vue?vue&type=style&index=0&id=762f2ea0&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-762f2ea0\"]])\n\nexport default __exports__","<template>\r\n    <div class=\"chatlist\">\r\n        <div v-if=\"chats\">\r\n        <div class=\"chatlist__chat\" @click=\"changeChat(chat.chatId)\" v-for=\"chat in chats\" :key=\"chat.id\" :class=\"chat.model\">\r\n            <div class=\"chatlist__chat__left\">\r\n                <div class=\"chatlist__chat__img\"></div>\r\n            </div>\r\n            <div class=\"chatlist__chat__meta\">\r\n                <div class=\"chatlist__chat__meta__top\">\r\n                    <h1>Чат #{{chat.chatId}}</h1>\r\n                    <p>{{chat.date}}</p>\r\n                </div>\r\n                <div class=\"chatlist__chat__meta__bottom\">\r\n                    <span >{{ chat.messages.at(-1).text }}</span>\r\n                    <button @click=\"deleteChat(chat.chatId)\">&#x2715;</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n        <div class=\"chatlist__add\">\r\n            <button @click=\"newChat('gpt')\">Gpt</button>\r\n            <button @click=\"newChat('gemini')\">Gemini</button>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\n    import { useStore } from '../stores/mainStore'\r\n    import { storeToRefs } from 'pinia'\r\n\r\n    const store = useStore()\r\n    const {chats} = storeToRefs(store)\r\n    const {changeChat, newChat, deleteChat} = store;\r\n</script>\r\n\r\n<style scoped>\r\n.chatlist {\r\n    background-color: #e6e6e6;\r\n    padding: 10px;\r\n    width: 20%;\r\n    max-width: 300px;\r\n    min-width: 100px;\r\n    overflow: hidden;\r\n    border-right: 1px solid #ccc;\r\n}\r\n\r\n.chatlist__add{\r\n    width: 100%;\r\n    display: flex;\r\n    gap: 2%;\r\n}\r\n.chatlist__add button{\r\n    flex:1;\r\n}\r\n\r\n\r\n.chatlist__chat {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    padding: 10px;\r\n    width: 100%;\r\n    border-radius: 8px;\r\n    background-color: white;\r\n    margin-bottom: 10px;\r\n    cursor: pointer;\r\n    overflow: hidden;\r\n}\r\n\r\n.gpt .chatlist__chat__img{\r\n    background: url('../assets/gpt.png');\r\n    background-size: cover;\r\n    width: 45px;\r\n    height: 45px;\r\n    border-radius: 50%;\r\n}\r\n\r\n.gemini .chatlist__chat__img{\r\n    background: url('../assets/gemini.png');\r\n    background-size: cover;\r\n    width: 45px;\r\n    height: 45px;\r\n    border-radius: 50%;\r\n}\r\n\r\n.chatlist__chat__meta {\r\n    width: 80%;\r\n}\r\n\r\n.chatlist__chat__meta__top {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n}\r\n\r\n.chatlist__chat__meta__top h1 {\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n}\r\n\r\n.chatlist__chat__meta__top img {\r\n    width: 12px;\r\n    height: 12px;\r\n    margin: 0 5px;\r\n}\r\n\r\n.chatlist__chat__meta__top p {\r\n    font-size: 12px;\r\n    color: gray;\r\n}\r\n\r\n.chatlist__chat__meta__bottom {\r\n    font-size: 14px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    width: 100%;\r\n    color: #555;\r\n    margin-top: 5px;\r\n}\r\n\r\n.chatlist__chat__meta__bottom button{\r\n    font-size: 10px;\r\n    width: 20px;\r\n    height: 20px;\r\n    color:black;\r\n}\r\n\r\n.chatlist__chat__meta__bottom span{\r\n    overflow: hidden;\r\n    width: 80%;\r\n    height: 40px;\r\n}\r\n\r\n</style>","import script from \"./ChatsList.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ChatsList.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ChatsList.vue?vue&type=style&index=0&id=7b47a885&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-7b47a885\"]])\n\nexport default __exports__","<template>\r\n    <div class=\"chat__messages\">\r\n        <div class=\"chat__message\" v-for=\"message in currentСhatMessages\" :key=\"message.msgId\" :class=\"message.sender\">\r\n            <p>{{ message.text }}</p>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\n    import {useStore} from '../stores/mainStore'\r\n    import { storeToRefs } from 'pinia';\r\n\r\n    const store = useStore()\r\n    const {currentСhatMessages} = storeToRefs(store)\r\n\r\n</script>\r\n\r\n<style scoped>\r\n.chat__messages {\r\n    flex: 1;\r\n    overflow-y: auto;\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 12px;\r\n    padding-bottom: 60px;\r\n}\r\n\r\n.user {\r\n    align-self: flex-end;\r\n    background-color: #c0dfc4;\r\n    padding: 12px 18px;\r\n    border-radius: 15px 15px 0 15px;\r\n    max-width: 60%;\r\n}\r\n\r\n.gpt {\r\n    align-self: flex-start;\r\n    background-color: #ddd;\r\n    padding: 12px 18px;\r\n    border-radius: 15px 15px 15px 0;\r\n    max-width: 60%;\r\n}\r\n.gemini {\r\n    align-self: flex-start;\r\n    background-color: #c1b8e4;\r\n    padding: 12px 18px;\r\n    border-radius: 15px 15px 15px 0;\r\n    max-width: 60%;\r\n}\r\n</style>","import script from \"./MessagesList.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./MessagesList.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./MessagesList.vue?vue&type=style&index=0&id=00a1ab5e&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-00a1ab5e\"]])\n\nexport default __exports__","<template>    \r\n    <form v-if=\"chats[0]\" @submit.prevent=\"handleNewMessage\">\r\n        <input type=\"text\" v-model=\"msg\" placeholder=\"Введите сообщение...\">\r\n        <button type=\"submit\"></button>\r\n    </form>\r\n</template>\r\n\r\n<script setup>\r\n    import { useStore } from '../stores/mainStore'\r\n    import { storeToRefs } from 'pinia'\r\n    import { defineModel } from 'vue'\r\n\r\n    const msg = defineModel({type: String})\r\n    const store = useStore()\r\n    const {chats} = storeToRefs(store)\r\n    const {newMessage} = store;\r\n\r\n    function handleNewMessage() {\r\n        newMessage(msg.value.trim())\r\n        msg.value = '';\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\nform {\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 10px 20px;\r\n    position: absolute;\r\n    bottom: 0;\r\n    width: calc(100% - 40px);\r\n    background-color: #fff;\r\n    border-top: 1px solid #ccc;\r\n}\r\n\r\nform input {\r\n    width: 90%;\r\n    padding: 10px;\r\n    border: 1px solid #ccc;\r\n    border-radius: 20px;\r\n    outline: none;\r\n    font-size: 14px;\r\n}\r\n\r\nform button {\r\n    min-width: 36px;\r\n    min-height: 36px;\r\n    margin-left: 10px;\r\n    border-radius: 50%;\r\n    background-color: #4CAF50;\r\n    border: none;\r\n    cursor: pointer;\r\n}\r\n</style>","import script from \"./MessageForm.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./MessageForm.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./MessageForm.vue?vue&type=style&index=0&id=3a788bf7&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-3a788bf7\"]])\n\nexport default __exports__","<template>\r\n    <div class=\"chat\">\r\n        <MessagesList/>\r\n        <MessageForm/>\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\n    import MessagesList from './MessagesList.vue';\r\n    import MessageForm from './MessageForm.vue';\r\n</script>\r\n\r\n<style scoped>\r\n.chat {\r\n    flex: 1;\r\n    display: flex;\r\n    flex-direction: column;\r\n    background-color: #fff;\r\n    padding: 20px;\r\n    position: relative;\r\n}\r\n</style>","import script from \"./ChatBlock.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ChatBlock.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ChatBlock.vue?vue&type=style&index=0&id=5cff7ddb&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-5cff7ddb\"]])\n\nexport default __exports__","<template>\r\n  <div class=\"login-container\">\r\n    <form class=\"login-form\" @submit.prevent=\"saveTokens(geminiToken, gptToken)\">\r\n      <h2 class=\"login-form__title\">ВХОД</h2>\r\n      <div class=\"input-group\">\r\n        <div class=\"input-group__icon\">\r\n          <img v-if=\"tokenGpt == ''\" src=\"../assets/gpt.png\">\r\n          <img v-else src=\"../assets/gpt_active.png\">\r\n        </div>\r\n        <input v-model=\"gptToken\" type=\"text\" class=\"input-group__input\" placeholder=\"Токен ChatGPT\"\r\n          aria-label=\"Токен ChatGPT\" />\r\n      </div>\r\n\r\n      <div class=\"input-group\">\r\n        <div class=\"input-group__icon\">\r\n          <img v-if=\"tokenGemini == ''\" src=\"../assets/gemini.png\">\r\n          <img v-else src=\"../assets/gemini_active.png\">\r\n        </div>\r\n        <input v-model=\"geminiToken\" type=\"text\" class=\"input-group__input\" placeholder=\"Токен Gemini\"\r\n          aria-label=\"Токен Gemini\" />\r\n      </div>\r\n\r\n      <button type=\"submit\" class=\"login-form__button\">Сохранить токен</button>\r\n\r\n      <a target=\"_blank\" href=\"https://docs.google.com/document/d/15y8hTKGTWBbTZITkLnNtly_z5lwKGQwRVJ27GcYt3KI/edit?usp=sharing\" class=\"login-form__link\">как получить токен?</a>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref } from 'vue';\r\nimport { useStore } from '../stores/mainStore'\r\nimport { storeToRefs } from 'pinia'\r\n\r\nconst store = useStore();\r\nconst {tokenGemini,tokenGpt} = storeToRefs(store);\r\n\r\nconst gptToken = ref('');\r\nconst geminiToken = ref('');\r\n\r\nconst saveTokens = (gemini, gpt) => {\r\n  store.saveTokens(gemini, gpt);\r\n\r\n  gptToken.value = '';\r\n  geminiToken.value = '';\r\n};\r\n\r\n</script>\r\n\r\n<style scoped>\r\n.login-container {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  padding: 40px 20px;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.login-form {\r\n  background-color: #f0f2f5;\r\n  /* Цвет фона формы */\r\n  padding: 40px;\r\n  border-radius: 24px;\r\n  max-width: 450px;\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  box-shadow: 0 8px 24px rgba(0, 0, 0, 0.05);\r\n}\r\n\r\n.login-form__title {\r\n  font-size: 28px;\r\n  font-weight: bold;\r\n  color: #333;\r\n  margin: 0;\r\n  margin-bottom: 30px;\r\n}\r\n\r\n.input-group {\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n\r\n.input-group__icon{\r\n  flex-shrink: 0;\r\n  width: 30px;\r\n  height: 30px;\r\n  background-image: '../assets/gemini.png';\r\n  margin-right: 15px;\r\n}\r\n\r\n.input-group__input {\r\n  width: 100%;\r\n  padding: 12px 16px;\r\n  border: none;\r\n  border-radius: 8px;\r\n  /* Небольшое скругление поля ввода */\r\n  font-size: 16px;\r\n  background-color: #ffffff;\r\n  outline: none;\r\n  /* Убираем стандартную обводку при фокусе */\r\n  transition: box-shadow 0.2s ease-in-out;\r\n}\r\n\r\n.input-group__input::placeholder {\r\n  color: #999;\r\n}\r\n\r\n.input-group__input:focus {\r\n  box-shadow: 0 0 0 2px rgba(96, 165, 250, 0.5);\r\n  /* Подсветка при фокусе */\r\n}\r\n\r\n.login-form__button {\r\n  width: 100%;\r\n  padding: 14px 20px;\r\n  margin-top: 10px;\r\n  margin-bottom: 20px;\r\n  background-color: #65b867;\r\n  /* Зеленый цвет кнопки */\r\n  color: white;\r\n  font-size: 18px;\r\n  font-weight: bold;\r\n  border: none;\r\n  border-radius: 50px;\r\n  /* Полностью скругленные края */\r\n  cursor: pointer;\r\n  transition: background-color 0.2s ease;\r\n}\r\n\r\n.login-form__button:hover {\r\n  background-color: #559d57;\r\n  /* Более темный оттенок при наведении */\r\n}\r\n\r\n.login-form__link {\r\n  font-size: 14px;\r\n  color: #3b82f6;\r\n  /* Синий цвет ссылки */\r\n  text-decoration: none;\r\n}\r\n\r\n.login-form__link:hover {\r\n  text-decoration: underline;\r\n}\r\n</style>","import script from \"./appLogin.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./appLogin.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./appLogin.vue?vue&type=style&index=0&id=1636814c&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-1636814c\"]])\n\nexport default __exports__","<template>\r\n    <main>\r\n        <ChatList v-if=\"activePage === 'main'\"/>\r\n        <ChatBlock v-if=\"activePage === 'main'\"/>\r\n        <Login v-if=\"activePage === 'login'\"/>\r\n    </main>\r\n</template>\r\n\r\n<script setup>\r\n    import ChatList from './ChatsList.vue';\r\n    import ChatBlock from './ChatBlock.vue';\r\n    import Login from './appLogin.vue';\r\n    import { useStore } from '../stores/mainStore'\r\n    import {storeToRefs} from 'pinia'\r\n\r\n    const store = useStore()\r\n    const {activePage} = storeToRefs(store)\r\n</script>\r\n\r\n<style scoped>\r\nmain{\r\n    display: flex;\r\n    height: calc(100vh - 60px);\r\n}\r\n</style>","import script from \"./appMain.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./appMain.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./appMain.vue?vue&type=style&index=0&id=bf28a530&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-bf28a530\"]])\n\nexport default __exports__","import { render } from \"./App.vue?vue&type=template&id=12b34a77\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createApp } from 'vue'\r\nimport { createPinia } from 'pinia'\r\nimport App from './App.vue'\r\nimport './styles/main.css'\r\nimport piniaPluginPersistedstate from 'pinia-plugin-persistedstate'\r\n\r\n\r\nconst app = createApp(App);\r\nconst pinia = createPinia();\r\npinia.use(piniaPluginPersistedstate) \r\napp.use(pinia);\r\napp.mount('#app');\r\n\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkmultymessage\"] = self[\"webpackChunkmultymessage\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(8046); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["_createVNode","_component_Header","_component_Main","API_URL_GPT","TASK_URL_GPT","API_URL_GEMINI","async","waitForGptResult","taskId","i","Promise","resolve","setTimeout","response","fetch","encodeURIComponent","ok","console","error","status","data","json","Error","callGptApi","prompt","method","headers","body","JSON","stringify","markdown","id","result","gpt","callGeminiApi","messages","apiKey","contents","map","msg","role","sender","parts","text","errorData","message","statusText","candidates","content","useStore","defineStore","state","chats","tokenGemini","tokenGpt","currentСhatId","activePage","persist","getters","currentChat","find","chat","chatId","currentСhatMessages","this","actions","_getNextChatId","length","maxId","Math","max","_getNextMessageId","allMessages","flatMap","msgId","changeChat","newMessage","model","push","responseMsgId","loading","responseText","conversationHistory","filter","m","join","responseMessage","trim","newChat","newId","date","getFormattedDate","deleteChat","changePage","saveTokens","geminiToken","gptToken","today","Date","day","String","getDate","padStart","month","getMonth","store","storeToRefs","_createElementBlock","_createElementVNode","target","href","_hoisted_1","_unref","onClick","_cache","args","src","_imports_0","alt","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","__exports__","_Fragment","_renderList","class","_normalizeClass","$event","key","_toDisplayString","_hoisted_6","at","_hoisted_7","_hoisted_8","_useModel","__props","handleNewMessage","value","onSubmit","_withModifiers","type","placeholder","MessagesList","MessageForm","ref","gemini","_hoisted_9","_createBlock","ChatList","ChatBlock","Login","name","components","Header","Main","render","app","createApp","App","pinia","createPinia","use","piniaPluginPersistedstate","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","call","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","Object","keys","every","splice","r","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","get","g","globalThis","Function","e","window","obj","prop","prototype","hasOwnProperty","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","forEach","bind","__webpack_exports__"],"sourceRoot":""}